
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isTeamMember(project) {
      return request.auth.uid in project.data.team;
    }

    // --- Projects Collection ---
    match /projects/{projectId} {
      // **TARGETED CHANGE START**
      // The `list` rule allows collection queries (e.g., getAllProjects).
      // Any signed-in user can list all projects. The filtering for drafts
      // happens in the application code.
      allow list: if isSignedIn();
      
      // The `get` rule secures individual document reads.
      // A user can get a project if it's published OR they are a team member.
      allow get: if resource.data.status == 'published' || isTeamMember(resource);
      // **TARGETED CHANGE END**
      
      allow create: if isSignedIn();
      allow update: if isTeamMember(resource);
      allow delete: if false; // Deletes are disabled for now
    }

    // --- Users Collection ---
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }

    // --- Tags Collection ---
    match /tags/{tagId} {
      allow read, write: if isSignedIn();
    }

    // --- Learning Paths Collection ---
    match /learningPaths/{pathId} {
        allow read: if isSignedIn();
        allow write: if false;
    }

    // --- User Progress Collection ---
    match /userLearningProgress/{progressId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }
  }
}
